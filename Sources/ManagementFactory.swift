
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:04 GMT 2016 ///

/// class java.lang.management.ManagementFactory ///

open class ManagementFactory: JavaObject {

    public convenience init?( casting object: JavaObject, _ file: StaticString = #file, _ line: Int = #line ) {
        self.init( javaObject: nil )
        if !object.validDownCast( toJavaClass: "java.lang.management.ManagementFactory", file, line ) {
            return nil
        }
        object.withJavaObject {
            self.javaObject = $0
        }
    }

    private static var ManagementFactoryJNIClass: jclass?

    /// public static final java.lang.String java.lang.management.ManagementFactory.CLASS_LOADING_MXBEAN_NAME

    private static var CLASS_LOADING_MXBEAN_NAME_FieldID: jfieldID?

    open static var CLASS_LOADING_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "CLASS_LOADING_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &CLASS_LOADING_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.COMPILATION_MXBEAN_NAME

    private static var COMPILATION_MXBEAN_NAME_FieldID: jfieldID?

    open static var COMPILATION_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "COMPILATION_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &COMPILATION_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.MEMORY_MXBEAN_NAME

    private static var MEMORY_MXBEAN_NAME_FieldID: jfieldID?

    open static var MEMORY_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MEMORY_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &MEMORY_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.OPERATING_SYSTEM_MXBEAN_NAME

    private static var OPERATING_SYSTEM_MXBEAN_NAME_FieldID: jfieldID?

    open static var OPERATING_SYSTEM_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "OPERATING_SYSTEM_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &OPERATING_SYSTEM_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.RUNTIME_MXBEAN_NAME

    private static var RUNTIME_MXBEAN_NAME_FieldID: jfieldID?

    open static var RUNTIME_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "RUNTIME_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &RUNTIME_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.THREAD_MXBEAN_NAME

    private static var THREAD_MXBEAN_NAME_FieldID: jfieldID?

    open static var THREAD_MXBEAN_NAME: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "THREAD_MXBEAN_NAME", fieldType: "Ljava/lang/String;", fieldCache: &THREAD_MXBEAN_NAME_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE

    private static var GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE_FieldID: jfieldID?

    open static var GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE", fieldType: "Ljava/lang/String;", fieldCache: &GARBAGE_COLLECTOR_MXBEAN_DOMAIN_TYPE_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE

    private static var MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE_FieldID: jfieldID?

    open static var MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE", fieldType: "Ljava/lang/String;", fieldCache: &MEMORY_MANAGER_MXBEAN_DOMAIN_TYPE_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// public static final java.lang.String java.lang.management.ManagementFactory.MEMORY_POOL_MXBEAN_DOMAIN_TYPE

    private static var MEMORY_POOL_MXBEAN_DOMAIN_TYPE_FieldID: jfieldID?

    open static var MEMORY_POOL_MXBEAN_DOMAIN_TYPE: String! {
        get {
            let __value = JNIField.GetStaticObjectField( fieldName: "MEMORY_POOL_MXBEAN_DOMAIN_TYPE", fieldType: "Ljava/lang/String;", fieldCache: &MEMORY_POOL_MXBEAN_DOMAIN_TYPE_FieldID, className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass )
            return JNIType.decode( type: String(), from: __value )
        }
    }

    /// private static javax.management.MBeanServer java.lang.management.ManagementFactory.platformMBeanServer

    /// private static final java.lang.String java.lang.management.ManagementFactory.NOTIF_EMITTER

    /// private java.lang.management.ManagementFactory()

    /// public static java.lang.Object java.lang.management.ManagementFactory.newPlatformMXBeanProxy(javax.management.MBeanServerConnection,java.lang.String,java.lang.Class) throws java.io.IOException

    private static var newPlatformMXBeanProxy_MethodID_1: jmethodID?

    open class func newPlatformMXBeanProxy( arg0: /* javax.management.MBeanServerConnection */ UnclassedProtocol?, arg1: String?, arg2: Class? ) throws /* java.io.IOException */ -> JavaObject! {
        var __args = [jvalue]( repeating: jvalue(), count: 3 )
        var __locals = [jobject]()
        __args[0] = jvalue( l: arg0?.localJavaObject( &__locals ) )
        __args[1] = JNIType.encode( value: arg1, locals: &__locals )
        __args[2] = JNIType.encode( value: arg2, locals: &__locals )
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "newPlatformMXBeanProxy", methodSig: "(Ljavax/management/MBeanServerConnection;Ljava/lang/String;Ljava/lang/Class;)Ljava/lang/Object;", methodCache: &newPlatformMXBeanProxy_MethodID_1, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
        return __return != nil ? JavaObject( javaObject: __return ) : nil
    }

    open class func newPlatformMXBeanProxy( _ _arg0: /* javax.management.MBeanServerConnection */ UnclassedProtocol?, _ _arg1: String?, _ _arg2: Class? ) throws /* java.io.IOException */ -> JavaObject! {
        return try newPlatformMXBeanProxy( arg0: _arg0, arg1: _arg1, arg2: _arg2 )
    }

    /// public static java.lang.management.ClassLoadingMXBean java.lang.management.ManagementFactory.getClassLoadingMXBean()

    private static var getClassLoadingMXBean_MethodID_2: jmethodID?

    open class func getClassLoadingMXBean() -> ClassLoadingMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getClassLoadingMXBean", methodSig: "()Ljava/lang/management/ClassLoadingMXBean;", methodCache: &getClassLoadingMXBean_MethodID_2, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ClassLoadingMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.lang.management.MemoryMXBean java.lang.management.ManagementFactory.getMemoryMXBean()

    private static var getMemoryMXBean_MethodID_3: jmethodID?

    open class func getMemoryMXBean() -> MemoryMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getMemoryMXBean", methodSig: "()Ljava/lang/management/MemoryMXBean;", methodCache: &getMemoryMXBean_MethodID_3, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? MemoryMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.lang.management.ThreadMXBean java.lang.management.ManagementFactory.getThreadMXBean()

    private static var getThreadMXBean_MethodID_4: jmethodID?

    open class func getThreadMXBean() -> ThreadMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getThreadMXBean", methodSig: "()Ljava/lang/management/ThreadMXBean;", methodCache: &getThreadMXBean_MethodID_4, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? ThreadMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.lang.management.RuntimeMXBean java.lang.management.ManagementFactory.getRuntimeMXBean()

    private static var getRuntimeMXBean_MethodID_5: jmethodID?

    open class func getRuntimeMXBean() -> RuntimeMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getRuntimeMXBean", methodSig: "()Ljava/lang/management/RuntimeMXBean;", methodCache: &getRuntimeMXBean_MethodID_5, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? RuntimeMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.lang.management.CompilationMXBean java.lang.management.ManagementFactory.getCompilationMXBean()

    private static var getCompilationMXBean_MethodID_6: jmethodID?

    open class func getCompilationMXBean() -> CompilationMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getCompilationMXBean", methodSig: "()Ljava/lang/management/CompilationMXBean;", methodCache: &getCompilationMXBean_MethodID_6, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? CompilationMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.lang.management.OperatingSystemMXBean java.lang.management.ManagementFactory.getOperatingSystemMXBean()

    private static var getOperatingSystemMXBean_MethodID_7: jmethodID?

    open class func getOperatingSystemMXBean() -> OperatingSystemMXBean! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getOperatingSystemMXBean", methodSig: "()Ljava/lang/management/OperatingSystemMXBean;", methodCache: &getOperatingSystemMXBean_MethodID_7, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? OperatingSystemMXBeanForward( javaObject: __return ) : nil
    }


    /// public static java.util.List java.lang.management.ManagementFactory.getMemoryPoolMXBeans()

    private static var getMemoryPoolMXBeans_MethodID_8: jmethodID?

    open class func getMemoryPoolMXBeans() -> /* java.util.List */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getMemoryPoolMXBeans", methodSig: "()Ljava/util/List;", methodCache: &getMemoryPoolMXBeans_MethodID_8, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.util.List */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


    /// public static java.util.List java.lang.management.ManagementFactory.getMemoryManagerMXBeans()

    private static var getMemoryManagerMXBeans_MethodID_9: jmethodID?

    open class func getMemoryManagerMXBeans() -> /* java.util.List */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getMemoryManagerMXBeans", methodSig: "()Ljava/util/List;", methodCache: &getMemoryManagerMXBeans_MethodID_9, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.util.List */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


    /// public static java.util.List java.lang.management.ManagementFactory.getGarbageCollectorMXBeans()

    private static var getGarbageCollectorMXBeans_MethodID_10: jmethodID?

    open class func getGarbageCollectorMXBeans() -> /* java.util.List */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getGarbageCollectorMXBeans", methodSig: "()Ljava/util/List;", methodCache: &getGarbageCollectorMXBeans_MethodID_10, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* java.util.List */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


    /// public static synchronized javax.management.MBeanServer java.lang.management.ManagementFactory.getPlatformMBeanServer()

    private static var getPlatformMBeanServer_MethodID_11: jmethodID?

    open class func getPlatformMBeanServer() -> /* javax.management.MBeanServer */ UnclassedProtocol! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallStaticObjectMethod( className: "java/lang/management/ManagementFactory", classCache: &ManagementFactoryJNIClass, methodName: "getPlatformMBeanServer", methodSig: "()Ljavax/management/MBeanServer;", methodCache: &getPlatformMBeanServer_MethodID_11, args: &__args, locals: &__locals )
        defer { JNI.DeleteLocalRef( __return ) }
        return __return != nil ? /* javax.management.MBeanServer */ UnclassedProtocolForward( javaObject: __return ) : nil
    }


}
