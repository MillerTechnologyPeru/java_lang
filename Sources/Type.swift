
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// interface java.lang.reflect.Type ///

public protocol Type: JavaProtocol {

    /// public default java.lang.String java.lang.reflect.Type.getTypeName()

    func getTypeName() -> String!

}


open class TypeForward: JNIObjectForward, Type {

    private static var TypeJNIClass: jclass?

    /// public default java.lang.String java.lang.reflect.Type.getTypeName()

    private static var getTypeName_MethodID_2: jmethodID?

    open func getTypeName() -> String! {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        let __return = JNIMethod.CallObjectMethod( object: javaObject, methodName: "getTypeName", methodSig: "()Ljava/lang/String;", methodCache: &TypeForward.getTypeName_MethodID_2, args: &__args, locals: &__locals )
        return JNIType.toSwift( type: String(), from: __return )
    }


}


