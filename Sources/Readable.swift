
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:09 GMT 2016 ///

/// interface java.lang.Readable ///

public protocol Readable: JavaProtocol {

    /// public abstract int java.lang.Readable.read(java.nio.CharBuffer) throws java.io.IOException

    func read( arg0: /* java.nio.CharBuffer */ UnclassedObject? ) throws /* java.io.IOException */ -> Int
    func read( _ _arg0: /* java.nio.CharBuffer */ UnclassedObject? ) throws /* java.io.IOException */ -> Int

}

open class ReadableForward: JNIObjectForward, Readable {

    private static var ReadableJNIClass: jclass?

    /// public abstract int java.lang.Readable.read(java.nio.CharBuffer) throws java.io.IOException

    private static var read_MethodID_2: jmethodID?

    open func read( arg0: /* java.nio.CharBuffer */ UnclassedObject? ) throws /* java.io.IOException */ -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "read", methodSig: "(Ljava/nio/CharBuffer;)I", methodCache: &ReadableForward.read_MethodID_2, args: &__args, locals: &__locals )
        if let throwable = JNI.ExceptionCheck() {
            throw /* java.io.IOException */ UnclassedObject( javaObject: throwable )
        }
        return JNIType.decode( type: Int(), from: __return )
    }

    open func read( _ _arg0: /* java.nio.CharBuffer */ UnclassedObject? ) throws /* java.io.IOException */ -> Int {
        return try read( arg0: _arg0 )
    }

}


