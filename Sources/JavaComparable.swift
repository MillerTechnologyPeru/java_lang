
import java_swift

/// generated by: genswift.java 'java/lang|java/util|java/sql|java/awt|javax/swing' ///

/// JAVA_HOME: /Library/Java/JavaVirtualMachines/1.6.0.jdk/Contents/Home ///
/// Tue Dec 20 11:29:25 GMT 2016 ///

/// interface java.lang.Comparable ///

public protocol JavaComparable: JavaProtocol {

    /// public abstract int java.lang.Comparable.compareTo(java.lang.Object)

    func compareTo( arg0: JavaObject? ) -> Int
    func compareTo( _ _arg0: JavaObject? ) -> Int

}

open class JavaComparableForward: JNIObjectForward, JavaComparable {

    private static var JavaComparableJNIClass: jclass?

    /// public abstract int java.lang.Comparable.compareTo(java.lang.Object)

    private static var compareTo_MethodID_2: jmethodID?

    open func compareTo( arg0: JavaObject? ) -> Int {
        var __args = [jvalue]( repeating: jvalue(), count: 1 )
        var __locals = [jobject]()
        __args[0] = JNIType.encode( value: arg0, locals: &__locals )
        let __return = JNIMethod.CallIntMethod( object: javaObject, methodName: "compareTo", methodSig: "(Ljava/lang/Object;)I", methodCache: &JavaComparableForward.compareTo_MethodID_2, args: &__args, locals: &__locals )
        return JNIType.decode( type: Int(), from: __return )
    }

    open func compareTo( _ _arg0: JavaObject? ) -> Int {
        return compareTo( arg0: _arg0 )
    }

}


